{"cells":[{"cell_type":"markdown","id":"b6012152","metadata":{"id":"b6012152"},"source":["FIRST FIT"]},{"cell_type":"code","execution_count":null,"id":"19f8ed54","metadata":{"id":"19f8ed54","outputId":"498fc0d6-0fd4-4852-dfd1-ccadfcf12d1f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1683190779212,"user_tz":-330,"elapsed":62912,"user":{"displayName":"Devam Shahhh","userId":"10431202123068889553"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number of blocks:5\n","Enter the number of files:4\n","\n","\n","Enter the size of blocks:-\n","Block1:-100\n","Block2:-500\n","Block3:-200\n","Block4:-300\n","Block5:-600\n","\n","\n","Enter the size of files:-\n","File1:-212\n","File2:-417\n","File3:-112\n","File4:-426\n","\n","\n","File_no:\t File_size:\t Block_no:\t Block_size:\t Fragment\n","1\t\t 212\t\t 2\t\t 500\t\t 288\n","2\t\t 417\t\t 5\t\t 600\t\t 183\n","3\t\t 112\t\t 2\t\t 288\t\t 176\n"]}],"source":["def first_fit():\n","    a = int(input(\"Enter the number of blocks:\"))\n","    b = int(input(\"Enter the number of files:\"))\n","    print(\"\\n\")\n","    \n","    block=[]\n","    file=[]\n","    \n","    print(\"Enter the size of blocks:-\")\n","    for i in range(a):\n","        block.append(int(input(\"Block\" + str(i+1)+\":-\")))\n","        \n","    print(\"\\n\")\n","        \n","    print(\"Enter the size of files:-\")\n","    for i in range(b):\n","        file.append(int(input(\"File\" + str(i+1)+\":-\")))\n","        \n","    print(\"\\n\")\n","        \n","    print('File_no:\\t File_size:\\t Block_no:\\t Block_size:\\t Fragment')\n","\n","    for i in range(b):\n","\n","        for j in range(a):\n","\n","                if(block[j] > file[i]):\n","\n","                    print(f'{i+1}\\t\\t {file[i]}\\t\\t {j+1}\\t\\t {block[j]}\\t\\t {block[j] - file[i]}')\n","\n","                    block[j] = block[j] - file[i]\n","                    break\n","            \n","\n","first_fit()      \n"]},{"cell_type":"code","execution_count":null,"id":"bf09cdfc","metadata":{"id":"bf09cdfc"},"outputs":[],"source":[]},{"cell_type":"markdown","id":"bad1ad17","metadata":{"id":"bad1ad17"},"source":["WORST FIT"]},{"cell_type":"code","execution_count":null,"id":"b1f8a5fd","metadata":{"id":"b1f8a5fd","outputId":"c7f49fe5-8f82-4faa-ea43-bbf0d1b797b7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1683190810994,"user_tz":-330,"elapsed":31785,"user":{"displayName":"Devam Shahhh","userId":"10431202123068889553"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number of blocks:5\n","Enter the number of files:4\n","Enter the size of blocks:-\n","Block1:-100\n","Block2:-500\n","Block3:-200\n","Block4:-300\n","Block5:-600\n","Enter the size of files:-\n","File1:-212\n","File2:-417\n","File3:-112\n","File4:-426\n","File No. \t File Size \t Block No. \t Fragment\n","1 212\t\t5 \t\t 600 \t\t 276\n","2 417\t\t2 \t\t 500 \t\t 83\n","3 112\t\t5 \t\t 600 \t\t 276\n","4 426\t\tNot Allocated\n"]}],"source":["def worstFit(blockSize, m, FileSize, n):\n","    allocation = [-1] * n\n","     \n","    for i in range(n):\n","        \n","        index = -1\n","        for j in range(m):\n","            if a[j] >= b[i]:\n","                if index == -1:\n","                    index = j\n","                elif blockSize[index] < blockSize[j]:\n","                    index = j\n"," \n","        if index != -1:\n","             \n","            allocation[i] = index\n"," \n","            a[index] -= b[i]\n"," \n","    print(\"File No. \\t File Size \\t Block No. \\t Fragment\")\n","    for i in range(n):\n","        print(i + 1,b[i],end='\\t\\t')\n","        if allocation[i] != -1:\n","            var = allocation[i]\n","            print(allocation[i] + 1,'\\t\\t',c[var],'\\t\\t',a[var])\n","        else:\n","            print(\"Not Allocated\")\n"," \n","if __name__ == '__main__':\n","    bn = int(input(\"Enter the number of blocks:\"))\n","    fn = int(input(\"Enter the number of files:\"))  \n","    a=[]\n","    b=[]\n","    c=[]\n","    print(\"Enter the size of blocks:-\")\n","    for i in range(bn):\n","        temp = (int(input(\"Block\" + str(i+1)+\":-\")))\n","        a.append(temp)\n","        c.append(temp)\n","    \n","    print(\"Enter the size of files:-\")\n","    for i in range(fn):\n","        b.append(int(input(\"File\" + str(i+1)+\":-\")))\n","    \n","    m = len(a)\n","    n = len(b)\n"," \n","    worstFit(a, m, b, n)"]},{"cell_type":"markdown","id":"712f47c7","metadata":{"id":"712f47c7"},"source":[]},{"cell_type":"markdown","id":"8fdc3d4a","metadata":{"id":"8fdc3d4a"},"source":["Best Fit"]},{"cell_type":"code","execution_count":null,"id":"7a7276ee","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7a7276ee","executionInfo":{"status":"ok","timestamp":1683190846554,"user_tz":-330,"elapsed":35565,"user":{"displayName":"Devam Shahhh","userId":"10431202123068889553"}},"outputId":"3513db5e-40fa-4c10-9c6c-a2925e4d3d0a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number of blocks:5\n","Enter the number of files:4\n","Enter the size of blocks:-\n","Block1:-100\n","Block2:-500\n","Block3:-200\n","Block4:-300\n","Block5:-600\n","Enter the size of files:-\n","File1:-212\n","File2:-417\n","File3:-112\n","File4:-426\n","File No. \t File Size \t Block No. \t Fragment\n","1 212\t\t4 \t\t 300 \t\t 88\n","2 417\t\t2 \t\t 500 \t\t 83\n","3 112\t\t3 \t\t 200 \t\t 88\n","4 426\t\t5 \t\t 600 \t\t 174\n"]}],"source":[" def bestFit(blockSize, m, processSize, n):\n","     \n","\n","    allocation = [-1] * n\n","     \n","\n","    for i in range(n):\n","   \n","        bestIdx = -1\n","        for j in range(m):\n","            if blockSize[j] >= processSize[i]:\n","                if bestIdx == -1:\n","                    bestIdx = j\n","                elif blockSize[bestIdx] > blockSize[j]:\n","                    bestIdx = j\n"," \n","        if bestIdx != -1:\n","             \n","            allocation[i] = bestIdx\n"," \n","            blockSize[bestIdx] -= processSize[i]\n"," \n","    print(\"File No. \\t File Size \\t Block No. \\t Fragment\")\n","    for i in range(n):\n","        print(i + 1,processSize[i],end='\\t\\t')\n","        if allocation[i] != -1:\n","            var = allocation[i]\n","            print(allocation[i] + 1,'\\t\\t',c[var],'\\t\\t',blockSize[var])\n","        else:\n","            print(\"Not Allocated\")\n"," \n","# Driver code\n","if __name__ == '__main__':\n","    bn = int(input(\"Enter the number of blocks:\"))\n","    fn = int(input(\"Enter the number of files:\"))  \n","    blockSize=[]\n","    processSize=[]\n","    c=[]\n","    print(\"Enter the size of blocks:-\")\n","    for i in range(bn):\n","        temp = (int(input(\"Block\" + str(i+1)+\":-\")))\n","        blockSize.append(temp)\n","        c.append(temp)\n","    \n","    print(\"Enter the size of files:-\")\n","    for i in range(fn):\n","        processSize.append(int(input(\"File\" + str(i+1)+\":-\")))\n","    m = len(blockSize)\n","    n = len(processSize)\n"," \n","    bestFit(blockSize, m, processSize, n)"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.13"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}